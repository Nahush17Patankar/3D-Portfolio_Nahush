import React from 'react'
import { useGLTF } from '@react-three/drei'
import skyScene from '../assets/3d/sky.glb'
import { useRef } from 'react'
import { useFrame } from '@react-three/fiber'


const Sky = ({ isRotating }) => {
    const sky = useGLTF(skyScene);
    const skyRef = useRef();

    useFrame((_, delta) => {
      if(isRotating){
        skyRef.current.rotation.y += 0.15 * delta

      }

    })

  return (

    <mesh ref={skyRef}>
        <primitive object={sky.scene} />
    </mesh>

    
  )
}

export default Sky


// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// Author: Paul (https://sketchfab.com/paul_paul_paul)
// License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
// Source: https://sketchfab.com/3d-models/free-skybox-in-the-cloud-b270497defe24f9cb497b9a075eeb28f
// Title: FREE - SkyBox In The Cloud
// */

// import React, { useRef } from "react";
// import { useGLTF } from "@react-three/drei";

// export function Model(props) {
//   const { nodes, materials } = useGLTF("/sky.glb");
//   return (
//     <group {...props} dispose={null}>
//       <group scale={0.01}>
//         <mesh
//           castShadow
//           receiveShadow
//           geometry={nodes.Sphere__0.geometry}
//           material={materials["Scene_-_Root"]}
//           rotation={[-Math.PI / 2, 0, 0]}
//           scale={50000}
//         />
//       </group>
//     </group>
//   );
// }

// useGLTF.preload("/sky.glb");
